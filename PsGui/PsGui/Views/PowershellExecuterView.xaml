<UserControl x:Class="PsGui.Views.PowershellExecuterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:models="clr-namespace:PsGui.Models.PowershellExecuter"
             xmlns:pw="clr-namespace:PsGui.Converters"
             mc:Ignorable="d" 
             MaxHeight="600" MaxWidth="450"
             d:DesignHeight="600" d:DesignWidth="450">

    <UserControl.Resources>
        <!-- Collection views for the ObservableCollections in the ViewModel (ScriptReader) -->
        <CollectionViewSource x:Key="ScriptTextVariables" Source="{Binding ScriptTextVariables}" />
        <CollectionViewSource x:Key="ScriptUsernameVariables" Source="{Binding ScriptUsernameVariables}" />
        <CollectionViewSource x:Key="ScriptPasswordVariables" Source="{Binding ScriptPasswordVariables}" />

       <!-- TODO: remove multiline, rename compositecollection -->
        <CollectionViewSource x:Key="ScriptMultiLineVariables" Source="{Binding ScriptMultiLineVariables}" />
        
        <!-- 
             Combine the collection view into a single composite collection.
             Excluding the multiline collection
        -->
        <CompositeCollection x:Key="ScriptVariables">
            <!-- Order matters for user interface -->
            <!-- TODO: remove multiline, rename compositecollection -->
            <CollectionContainer Collection="{Binding Source={StaticResource ScriptUsernameVariables}}" />
            <CollectionContainer Collection="{Binding Source={StaticResource ScriptPasswordVariables}}" />
            <CollectionContainer Collection="{Binding Source={StaticResource ScriptTextVariables}}" />
            <!--    <CollectionContainer Collection="{Binding Source={StaticResource ScriptMultiLineVariables}}" /> -->
        </CompositeCollection>
        
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        
        <!-- Header: Category -->
        <TextBlock Text="Kategori" Grid.Row="0" 
                   Grid.Column="0" Margin=" 0 0 0 10" 
                   FontWeight="Bold" />

        <!-- Script category radio buttons  -->
        <ItemsControl ItemsSource="{Binding Path=ScriptCategoryBrowser}" 
                      Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3">
            <!-- Script category panel setup -->
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>


            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <!-- 
                    The command only ensures that the currently selected
                    script value in the view-model gets updated.
                    IsSelected updates the model with a boolean value 
                    for the currently selected ScriptCategory
                    -->
                    <RadioButton GroupName="category" Content="{Binding Path=FriendlyName}"
                                 Command="{Binding DataContext.RadioButtonChecked,
                                                   RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                  AncestorType={x:Type ItemsControl}}}"
                                 CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}"
                                 IsChecked="{Binding Path=IsSelectedCategory}"
                                 Margin="0 0 0 5" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        
        <!-- Script file dropdown menu -->
        <ComboBox ItemsSource="{Binding Path=ScriptFileBrowser}"
                  SelectedItem="{Binding Path=SelectedScriptFile, Mode=Default}"
                  Grid.Column="0" Grid.Row="2"
                  Grid.ColumnSpan="3"
                  Margin="10 10 10 0"/>
        
        <!-- Header: Input-->
        <TextBlock Text="Input" Grid.Row="3"
                   Grid.Column="0" FontWeight="Bold"
                   Margin="0 10 0 0" />
        
        <!-- Input fields -->
        <!-- TODO: remove multiline, rename compositecollection -->
<!--
        <ItemsControl ItemsSource="{Binding Path=ScriptUsernameVariables}"
                      Grid.Column="0" Grid.Row="4"
                      Grid.ColumnSpan="3">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="2" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel Margin="0 5 5 0">
                        <TextBlock Text="{Binding InputKey}" ToolTip="{Binding InputDescription}" />
                        <TextBox Text="{Binding InputValue, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
-->
       
        <!-- Single line input fields -->
        <ItemsControl ItemsSource="{StaticResource ScriptVariables}"
                      Grid.Column="0" Grid.Row="4"
                      Grid.ColumnSpan="3">
            
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="2" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.Resources>

                <DataTemplate DataType="{x:Type models:UsernameArgument}">
                    <StackPanel Margin="0 5 5 0">
                        <TextBlock Text="{Binding InputKey}" ToolTip="{Binding InputDescription}" />
                        <TextBox Text="{Binding InputValue, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                </DataTemplate>

                <DataTemplate DataType="{x:Type models:PasswordArgument}">
                    <StackPanel Margin="0 5 5 0" >
                        <TextBlock Text="{Binding InputKey}" ToolTip="{Binding InputDescription}" />
                        <PasswordBox x:Name="PasswordBox"
                                     pw:PasswordBoxAssistant.BindPassword="True"
                                     pw:PasswordBoxAssistant.BoundPassword="{Binding Path=InputValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    </StackPanel>
                </DataTemplate>

                <DataTemplate DataType="{x:Type models:TextArgument}">
                    <StackPanel Margin="0 5 5 0">
                        <TextBlock Text="{Binding InputKey}" ToolTip="{Binding InputDescription}" />
                        <TextBox Text="{Binding InputValue, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                </DataTemplate>
<!--         
                <DataTemplate DataType="{x:Type models:MultiLineArgument}">
                    <StackPanel Margin="0 5 5 0">
                        <TextBlock Text="{Binding InputKey}" ToolTip="{Binding InputDescription}" />
                        <TextBox Text="{Binding InputValue, UpdateSourceTrigger=PropertyChanged}"
                                 TextWrapping="NoWrap"
                                 AcceptsReturn="True"
                                 VerticalScrollBarVisibility="Visible" />
                    </StackPanel>
                </DataTemplate>
-->
            </ItemsControl.Resources>
        </ItemsControl>

        <!-- Multiline input fields -->
        <ItemsControl ItemsSource="{Binding Path=ScriptMultiLineVariables}"
                      Grid.Column="0" Grid.Row="5"
                      Grid.ColumnSpan="3">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="1" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel Margin="0 5 5 0">
                        <TextBlock Text="{Binding InputKey}" ToolTip="{Binding InputDescription}" />
                        <TextBox Text="{Binding InputValue, UpdateSourceTrigger=PropertyChanged}"
                                 TextWrapping="Wrap"
                                 AcceptsReturn="True"
                                 VerticalScrollBarVisibility="Visible" />
                    </StackPanel>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>


        <!-- Execute button -->
        <Button Command="{Binding Path=ExecuteButtonPushed}"
                Grid.Row="6" Grid.Column="1"
                Content="Kjør"
                Margin="10 10 10 0"
                IsDefault="True" />
        
        <!-- Header: Output -->
        <TextBlock Text="Output" FontWeight="Bold"
                   Grid.Row="7" Grid.Column="0" 
                   Margin="0 10 0 0" />
        
        <!-- Output field -->
        <ScrollViewer Grid.Row="8" Grid.Column="0"
                      Grid.ColumnSpan="3"
                      Margin="0 10 0 0">
            <TabControl BorderThickness="0" Margin="0 10 0 0">
                <TabItem Header="Output">
                    <TextBlock Text="{Binding Path=ScriptExecutionOutput}"
                               TextWrapping="Wrap"
                               FontSize="20"/>
                </TabItem>
                <TabItem Header="Errors">
                    <TextBlock Text="{Binding Path=ScriptExecutionErrorOutput}"
                               TextWrapping="Wrap" />
                </TabItem>

            </TabControl>
        </ScrollViewer>
    </Grid>
</UserControl>
